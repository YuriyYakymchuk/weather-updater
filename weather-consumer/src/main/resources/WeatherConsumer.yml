
spring:
  datasource:
    url: <<jdbc:mysql://host:port/learning>>
    username: <<username>>
    password: <<password>>
  jpa:
    hibernate:
      ddl-auto: none
      naming.physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  kafka:
    properties:
      bootstrap:
        servers: <<host:port>>
  cloud:
    stream:
      default:
        consumer:
          useNativeEncoding: true
      bindings:
        input:
          destination: weather-updates
          content-type: application/*+avro
          group: yuriy-local-1
          concurrency: 1
      kafka:
        binder:
          consumer-properties:
            schema.registry.url: <<http://host:port>>
            key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            specific.avro.reader: true
